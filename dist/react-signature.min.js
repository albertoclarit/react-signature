!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var i;i="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,i.ReactSignature=t()}}(function(){return function t(i,e,n){function o(r,a){if(!e[r]){if(!i[r]){var h="function"==typeof require&&require;if(!a&&h)return h(r,!0);if(s)return s(r,!0);var u=new Error("Cannot find module '"+r+"'");throw u.code="MODULE_NOT_FOUND",u}var c=e[r]={exports:{}};i[r][0].call(c.exports,function(t){var e=i[r][1][t];return o(e?e:t)},c,c.exports,t,i,e,n)}return e[r].exports}for(var s="function"==typeof require&&require,r=0;r<n.length;r++)o(n[r]);return o}({1:[function(t,i,e){(function(n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o,s,r="undefined"!=typeof window?window.React:"undefined"!=typeof n?n.React:null,a=t("./points_util.js"),h=t("./bezier_util.js"),u=(r.PropTypes,.7),c=.5,f=2.5,l=1.5,d="black",p=!1,y=r.createClass({displayName:"ReactSignature",getDefaultProps:function(){return{width:450,height:300}},getInitialState:function(){return{edited:!1}},componentDidMount:function(){o=this.refs.canvas,s=o.getContext("2d")},removeBlanks:function(){var t=s.canvas.width,i=s.canvas.height,e=s.getImageData(0,0,t,i),n=e.data,r=function(i,e){return n[4*(t*e+i)+3]},a=function(e){for(var n=e?1:-1,o=e?0:i-1;e?o<i:o>-1;o+=n)for(var s=0;s<t;s++)if(r(s,o))return o;return null},h=function(e){for(var n=e?1:-1,o=e?0:t-1;e?o<t:o>-1;o+=n)for(var s=0;s<i;s++)if(r(o,s))return o;return null},u=a(!0),c=a(!1),f=h(!0),l=h(!1),d=s.getImageData(f,u,l-f,c-u);o.width=l-f,o.height=c-u,s.clearRect(0,0,l-f,c-u),s.putImageData(d,0,0)},handleClear:function(){s.clearRect(0,0,o.width,o.height),this.reset()},isEdited:function(){return!!this.state.edited},toDataURL:function(){return o.toDataURL.apply(o,arguments)},fromDataURL:function(t){var i=new Image,e=window.devicePixelRatio||1,n=o.width/e,r=o.height/e;this.reset(),i.src=t,i.onload=function(){s.drawImage(i,0,0,n,r)},this.isEmpty=!1},handleMouseDown:function(t){p=!0,this.strokeBegin(t)},handleMouseMove:function(t){p&&this.strokeUpdate(t)},handleMouseUp:function(t){p=!1,this.setState({edited:!0}),this.strokeEnd(t)},strokeUpdate:function(t){var i=this.createPoint(t);this.addPoint(i)},strokeBegin:function(t){this.reset(),this.strokeUpdate(t)},strokeDraw:function(t){s.beginPath(),this.drawPoint(t.x,t.y,l),s.closePath(),s.fill()},strokeEnd:function(t){var i=this.points.length>2,e=this.points[0];!i&&e&&this.strokeDraw(e)},createPoint:function(t){var i=o.getBoundingClientRect();return new a(t.clientX-i.left,t.clientY-i.top)},addPoint:function(t){var i,e,n,o;this.points.push(t),this.points.length>2&&(3===this.points.length&&this.points.unshift(this.points[0]),o=this.calculateCurveControlPoints(this.points[0],this.points[1],this.points[2]),i=o.c2,o=this.calculateCurveControlPoints(this.points[1],this.points[2],this.points[3]),e=o.c1,n=new h(this.points[1],i,e,this.points[2]),this.addCurve(n),this.points.shift())},addCurve:function(t){var i,e,n=t.startPoint,o=t.endPoint;i=o.velocityFrom(n),i=u*i+(1-u)*this.lastVelocity,e=this.strokeWidth(i),this.drawCurve(t,this.lastWidth,e),this.lastVelocity=i,this.lastWidth=e},calculateCurveControlPoints:function(t,i,e){var n=t.x-i.x,o=t.y-i.y,s=i.x-e.x,r=i.y-e.y,h={x:(t.x+i.x)/2,y:(t.y+i.y)/2},u={x:(i.x+e.x)/2,y:(i.y+e.y)/2},c=Math.sqrt(n*n+o*o),f=Math.sqrt(s*s+r*r),l=h.x-u.x,d=h.y-u.y,p=f/(c+f),y={x:u.x+l*p,y:u.y+d*p},v=i.x-y.x,x=i.y-y.y;return{c1:new a(h.x+v,h.y+x),c2:new a(u.x+v,u.y+x)}},isEmpty:function(){return this.isEmpty},reset:function(){this.points=[],this.lastVelocity=0,this.lastWidth=(this.minWidth+this.maxWidth)/2,this.isEmpty=!0,s.fillStyle=d},drawPoint:function(t,i,e){s.moveTo(t,i),s.arc(t,i,e,0,2*Math.PI,!1),this.isEmpty=!1},drawCurve:function(t,i,e){var n,o,r,a,h,u,c,f,l,d,p,y=e-i;for(n=Math.floor(t.length()),s.beginPath(),r=0;r<n;r++)a=r/n,h=a*a,u=h*a,c=1-a,f=c*c,l=f*c,d=l*t.startPoint.x,d+=3*f*a*t.control1.x,d+=3*c*h*t.control2.x,d+=u*t.endPoint.x,p=l*t.startPoint.y,p+=3*f*a*t.control1.y,p+=3*c*h*t.control2.y,p+=u*t.endPoint.y,o=i+u*y,this.drawPoint(d,p,o);s.closePath(),s.fill()},strokeWidth:function(t){return Math.max(f/(t+1),c)},render:function(){return r.createElement("canvas",{width:this.props.width,height:this.props.height,ref:"canvas",onMouseDown:this.handleMouseDown,onMouseMove:this.handleMouseMove,onMouseUp:this.handleMouseUp})}});e["default"]=y,i.exports=e["default"]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./bezier_util.js":2,"./points_util.js":3}],2:[function(t,i,e){"use strict";var n=function(t,i,e,n){this.startPoint=t,this.control1=i,this.control2=e,this.endPoint=n};n.prototype.length=function(){var t,i,e,n,o,s,r,a,h=10,u=0;for(t=0;t<=h;t++)i=t/h,e=this.point(i,this.startPoint.x,this.control1.x,this.control2.x,this.endPoint.x),n=this.point(i,this.startPoint.y,this.control1.y,this.control2.y,this.endPoint.y),t>0&&(r=e-o,a=n-s,u+=Math.sqrt(r*r+a*a)),o=e,s=n;return u},n.prototype.point=function(t,i,e,n,o){return i*(1-t)*(1-t)*(1-t)+3*e*(1-t)*(1-t)*t+3*n*(1-t)*t*t+o*t*t*t},i.exports=n},{}],3:[function(t,i,e){"use strict";var n=function(t,i,e){this.x=t,this.y=i,this.time=e||(new Date).getTime()};n.prototype.velocityFrom=function(t){return this.time!==t.time?this.distanceTo(t)/(this.time-t.time):1},n.prototype.distanceTo=function(t){return Math.sqrt(Math.pow(this.x-t.x,2)+Math.pow(this.y-t.y,2))},i.exports=n},{}]},{},[1])(1)});